<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.4"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
  <!-- Spring ApplicationContext配置文件的路径�可使用通配符，多个路径用�,号分隔此参数用于后面的Spring-Context loader -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath*:spring/*.xml</param-value>
  </context-param>

  <!-- jmesa's Properties -->
  <!--
  <context-param>
    <param-name>jmesaPreferencesLocation</param-name>
    <param-value>/config/jmesa.properties</param-value>
  </context-param>
  -->
  <!-- ExtremeTable's Properties -->
  <!--
  <context-param>
      <param-name>extremecomponentsPreferencesLocation</param-name>
      <param-value>/config/extremetable.properties</param-value>
  </context-param>
  -->
  <!--
   <filter>
      <filter-name>sessionTimeoutFilter</filter-name>
      <filter-class>com.yeoou.common.context.SessionTimeoutFilter</filter-class>
      <init-param>
          <param-name>timeoutPage</param-name>
          <param-value>/acegiLogin.jsp?expired=true</param-value>
      </init-param>
  </filter> -->

  <!-- Character Encoding filter -->
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>


  </filter>




  <!-- Struts Action Mapping-->
  <filter>
    <filter-name>struts2</filter-name>
    <filter-class>org.apache.struts2.dispatcher.FilterDispatcher</filter-class>
  </filter>
  <!-- ExtremeTable 导出Excel和Pdf的Filter -->
  <!--
  <filter>
      <filter-name>eXtremeExport</filter-name>
      <filter-class>org.extremecomponents.table.filter.ExportFilter</filter-class>
  </filter>
  -->

  <filter>
    <filter-name>Acegi Filter Chain Proxy</filter-name>
    <filter-class>org.acegisecurity.util.FilterToBeanProxy</filter-class>
    <init-param>
      <param-name>targetBean</param-name>
      <param-value>filterChainProxy</param-value>
    </init-param>
  </filter>

  <!--Hibernate Open Session in View Filter
  <filter-mapping>
      <filter-name>sessionTimeoutFilter</filter-name>
      <url-pattern>/*</url-pattern>
  </filter-mapping>-->

  <filter>
    <filter-name>hibernateFilter</filter-name>
    <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
  </filter>

  <filter-mapping>
    <filter-name>Acegi Filter Chain Proxy</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>*.shtml</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>*.jsp</url-pattern>
  </filter-mapping>

  <filter-mapping>
    <filter-name>struts2</filter-name>
    <url-pattern>*.shtml</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
  </filter-mapping>
  <!--
  <filter-mapping>
        <filter-name>struts2</filter-name>
        <url-pattern>/*</url-pattern>
   </filter-mapping>
   -->
  <filter-mapping>
    <filter-name>hibernateFilter</filter-name>
    <url-pattern>*.*</url-pattern>
  </filter-mapping>
  <!--
  <filter-mapping>
      <filter-name>eXtremeExport</filter-name>
      <url-pattern>*.shtml</url-pattern>
  </filter-mapping>-->
  <filter>
    <filter-name> struts-cleanup </filter-name >
    <filter-class >
      org.apache.struts2.dispatcher.ActionContextCleanUp
    </filter-class >
  </filter >
  <filter-mapping>
    <filter-name> struts-cleanup </filter-name>
    <url-pattern>/*</url-pattern >
  </filter-mapping >
  <!--Spring ApplicationContext 载入
   <listener>
       <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
   </listener>-->

  <listener>
    <listener-class>com.yeoou.common.context.MyAppContextLoaderListener</listener-class>
  </listener>

  <listener>
    <listener-class>com.yeoou.common.context.AppSessionListener</listener-class>
  </listener>

  <!-- Spring 刷新Introspector防止内存泄露 -->
  <listener>
    <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>

  <!-- 支持Request scope的Spring bean -->
  <listener>
    <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
  </listener>

  <!-- 用于发布HttpSessionApplicationEvents和HttpSessionDestroyedEvent事件给spring的applicationcontext
      每次HttpSession开始或者结束的时候, 它都会发布一个ApplicationEvent事件到Spring的ApplicationContext-->
  <!-- 	<listener>
          <listener-class>org.acegisecurity.ui.session.HttpSessionEventPublisher</listener-class>
      </listener>-->

  <!-- session超时定义,单位为分钟 -->
  <session-config>
    <session-timeout>60</session-timeout>
  </session-config>


  <!-- 启动JSPSupportServlet 可以在FreeMarker模板中使用标签库 -->
  <servlet>
    <!-- 定义一个JspSupportServlet -->
    <servlet-name>JspSupportServlet</servlet-name>
    <servlet-class>org.apache.struts2.views.JspSupportServlet</servlet-class>
    <!-- 配置JspSupportServlert 自启动 -->
    <load-on-startup>1</load-on-startup>
  </servlet>
  <!-- FCKEDITOR配置文件 -->
  <servlet>
    <servlet-name>Connector</servlet-name>
    <servlet-class>
      com.yeoou.fckeditor.ConnectorServlet
    </servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <servlet-mapping>
    <servlet-name>Connector</servlet-name>
    <url-pattern>/fckeditor/editor/filemanager/connectors/*</url-pattern>
  </servlet-mapping>
  <filter>
    <filter-name>UrlRewriteFilter</filter-name>
    <filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>

    <!-- set the amount of seconds the conf file will be checked for reload
    can be a valid integer (0 denotes check every time,
    -1 denotes no reload check, default -1) -->
    <init-param>
      <param-name>confReloadCheckInterval</param-name>
      <param-value>60</param-value>
    </init-param>

    <!-- if you need to the conf file path can be changed
    it is specified as a path relative to the root of your context
    (default /WEB-INF/urlrewrite.xml) -->
    <init-param>
      <param-name>confPath</param-name>
      <param-value>/WEB-INF/urlrewrite.xml</param-value>
    </init-param>

    <!-- sets up log level (will be logged to context log)
    can be: TRACE, DEBUG, INFO (default), WARN, ERROR, FATAL, log4j, commons, slf4j,
    sysout:{level} (ie, sysout:DEBUG)
    if you are having trouble using normal levels use sysout:DEBUG
    (default WARN) -->
    <init-param>
      <param-name>logLevel</param-name>
      <param-value>DEBUG</param-value>
    </init-param>

    <!-- you can change status path so that it does not
    conflict with your installed apps (note, defaults
    to /rewrite-status) note, must start with / -->
    <init-param>
      <param-name>statusPath</param-name>
      <param-value>/status</param-value>
    </init-param>

    <!-- you can disable status page if desired
    can be: true, false (default true) -->
    <init-param>
      <param-name>statusEnabled</param-name>
      <param-value>true</param-value>
    </init-param>

    <!-- you may want to allow more hosts to look at the status page
    statusEnabledOnHosts is a comma delimited list of hosts, * can
    be used as a wildcard (defaults to "localhost, local, 127.0.0.1") -->
    <init-param>
      <param-name>statusEnabledOnHosts</param-name>
      <param-value>localhost, dev.*.myco.com, *.uat.mycom.com</param-value>
    </init-param>



    <!-- defaults to false. use mod_rewrite style configuration file (if this is true and confPath
    is not specified confPath will be set to /WEB-INF/.htaccess) -->
    <init-param>
      <param-name>modRewriteConf</param-name>
      <param-value>false</param-value>
    </init-param>

    <!-- load mod_rewrite style configuration from this parameter's value.
            note, Setting this parameter will mean that all other conf parameters are ignored.
        <init-param>
            <param-name>modRewriteConfText</param-name>
            <param-value>
                RewriteRule ^/~([^/]+)/?(.*) /u/$1/$2 [R]
                RewriteRule ^/([uge])/([^/]+)$ /$1/$2/ [R]
            </param-value>
        </init-param>
    -->

    <!-- defaults to false. allow conf file to be set by calling /rewrite-status/?conf=/WEB-INF/urlrewrite2.xml
            designed to be used for testing only
        <init-param>
            <param-name>allowConfSwapViaHttp</param-name>
            <param-value>false</param-value>
        </init-param>
    -->

  </filter>

  <filter-mapping>
    <filter-name>UrlRewriteFilter</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
  </filter-mapping>

  <!-- 默认首页定义 -->
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
  <error-page>
    <error-code>404</error-code>
    <location>/WEB-INF/commons/404.jsp</location>
  </error-page>
  <error-page>
    <error-code>403</error-code>
    <location>/WEB-INF/commons/403.jsp</location>
  </error-page>
</web-app>



